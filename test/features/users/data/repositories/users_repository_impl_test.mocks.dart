// Mocks generated by Mockito 5.4.4 from annotations
// in posts_app/test/features/users/data/repositories/users_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:posts_app/core/network/network_info.dart' as _i7;
import 'package:posts_app/features/users/data/data_sources/users_local_data_source.dart'
    as _i6;
import 'package:posts_app/features/users/data/data_sources/users_remote_data_source.dart'
    as _i4;
import 'package:posts_app/features/users/data/models/user_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnit_1 extends _i1.SmartFake implements _i3.Unit {
  _FakeUnit_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDataSource extends _i1.Mock
    implements _i4.UserRemoteDataSource {
  MockUserRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserModel> getUser(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [id],
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #getUser,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);
}

/// A class which mocks [UsersLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersLocalDataSource extends _i1.Mock
    implements _i6.UsersLocalDataSource {
  MockUsersLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserModel> getCachedUser(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getCachedUser,
          [id],
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #getCachedUser,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<_i3.Unit> cacheUser(_i2.UserModel? userModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheUser,
          [userModel],
        ),
        returnValue: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #cacheUser,
            [userModel],
          ),
        )),
      ) as _i5.Future<_i3.Unit>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
