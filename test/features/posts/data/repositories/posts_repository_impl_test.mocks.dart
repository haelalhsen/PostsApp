// Mocks generated by Mockito 5.4.4 from annotations
// in posts_app/test/features/posts/data/repositories/posts_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:posts_app/core/network/network_info.dart' as _i3;
import 'package:posts_app/features/posts/data/datasources/post_local_data_source.dart'
    as _i7;
import 'package:posts_app/features/posts/data/datasources/post_remote_data_source.dart'
    as _i5;
import 'package:posts_app/features/posts/data/models/post_model.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUnit_0 extends _i1.SmartFake implements _i2.Unit {
  _FakeUnit_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [PostRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRemoteDataSource extends _i1.Mock
    implements _i5.PostRemoteDataSource {
  MockPostRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.PostModel>> getAllPosts() => (super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [],
        ),
        returnValue: _i4.Future<List<_i6.PostModel>>.value(<_i6.PostModel>[]),
      ) as _i4.Future<List<_i6.PostModel>>);
}

/// A class which mocks [PostLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostLocalDataSource extends _i1.Mock
    implements _i7.PostLocalDataSource {
  MockPostLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.PostModel>> getCachedPosts() => (super.noSuchMethod(
        Invocation.method(
          #getCachedPosts,
          [],
        ),
        returnValue: _i4.Future<List<_i6.PostModel>>.value(<_i6.PostModel>[]),
      ) as _i4.Future<List<_i6.PostModel>>);

  @override
  _i4.Future<_i2.Unit> cachePosts(List<_i6.PostModel>? postModels) =>
      (super.noSuchMethod(
        Invocation.method(
          #cachePosts,
          [postModels],
        ),
        returnValue: _i4.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #cachePosts,
            [postModels],
          ),
        )),
      ) as _i4.Future<_i2.Unit>);
}
